#ifndef BINGOGAME_H
#define BINGOGAME_H
#include <vector>
#include "BingoCard.h"
#include "Caller.h"

class BingoCard;

class BingoGame
{
    private:
        int currentRoundVal;                                            // Current round value, generated by the Caller
        std::vector<BingoCard*> cardsInPlay;                            // Vector of BingoCard pointers associated with BingoGame
        Caller* callerPtr;                                              // Pointer to Caller associated with BingoGame
    
    public:
        BingoGame();                                                    // Constructor
        ~BingoGame();                                                   // Destructor, sets to nullptr pointers to Caller and BingoCards
        int numCardsInPlay;                                             // Int to track number of BingoCards associated with the BingoGame
        void addCardToGame(BingoCard*);                                 // Function to add BingoCard to BingoGame (via  vector of pointers to the cards)
        int getCurrentRoundValue();                                     // Return current round value (which was updated by Caller)
        void playRound();                                               // Sets in motion a round, described in greater detail in BingoGame.cpp
        int checkForWin();                                              // Returns 1 if any of the associated BingoCards are winners
        friend void Caller::assignCallerToBingoGame();                  // Friend function that sets callerPtr when Caller is initialized
        friend void Caller::setCurrentRoundValue();                     // Friend function allowing Caller to set currentRoundVal
        friend void displayBingoCardsInGame(BingoGame*, bool);          // Friend function allowing main to print all the BingoCards (requires access to cardsInPlay vector)
};

#endif